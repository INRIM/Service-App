version: '3.8'

services:

  databse:
    stdin_open: true  # -i
    tty: true
    build:
      context: .
      dockerfile: Dockerfile-mongo
      network: host
      args:
        - TZ=$TZ
    environment:
      MONGO_INITDB_ROOT_USERNAME: $MONGO_USER
      MONGO_INITDB_ROOT_PASSWORD: $MONGO_PASS
      MONGO_INITDB_DATABASE: $MONGO_DB
    volumes:
      - ./mdbdata:/data/db
      - ./dump:/dump
      - ./scripts/init_db.js:/docker-entrypoint-initdb.d/init_db.js:ro
    ports:
      - "${MONGO_PORT}:27017"

  backend:
    stdin_open: true  # -i
    tty: true         # -t
    build:
      context: .
      dockerfile: Dockerfile
      network: host
      args:
        - TZ=$TZ
    image: python.$STACK
    privileged: true
    volumes:
      - ./backend:/app
      - .env:/app/.env
      - ./sys/fs/cgroup:/sys/fs/cgroup:ro
    environment:
      - WEB_CONCURRENCY=$WEB_CONCURRENCY
      - PORT=8225
    ports:
      - "${SERVER_PORT}:8225"
    links:
      - databse


  client:
    stdin_open: true  # -i
    tty: true         # -t
    build:
      context: .
      dockerfile: Dockerfile-webclient
      network: host
      args:
        - TZ=$TZ
    image: python.client-$STACK
    volumes:
      - ./web-client:/app
      - ./uploads:/uploads
      - .env-client:/app/.env
    environment:
      - WEB_CONCURRENCY=$WEB_CONCURRENCY
      - PORT=8526
    ports:
      - "${CLIENT_PORT}:8526"
    links:
      - backend

  automation:
    stdin_open: true  # -i
    tty: true
    build:
      context: automations
      dockerfile: Dockerfile
      network: host
      args:
        - TZ=$TZ
    image: automations.$STACK
    volumes:
      - ./automations:/automations
    privileged: true
    links:
      - backend