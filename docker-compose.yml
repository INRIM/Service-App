version: '3.9'

services:

  database:
    profiles: [ "all" ]
    stdin_open: true  # -i
    tty: true
    build:
      context: .
      dockerfile: Dockerfile-mongo
      network: host
      args:
        - TZ=$TZ
    environment:
      MONGO_INITDB_ROOT_USERNAME: $MONGO_USER
      MONGO_INITDB_ROOT_PASSWORD: $MONGO_PASS
      MONGO_INITDB_DATABASE: $MONGO_DB
    volumes:
      - ./mdbdata:/data/db
      - ./dump:/dump
      - ./scripts/init_db.js:/docker-entrypoint-initdb.d/init_db.js:ro
    ports:
      - "27017:27017"
    restart: always


  redis_cache:
    profiles: [ "core",  "all" ]
    image: redis:latest
    command: redis-server --maxmemory 100mb  --maxmemory-policy allkeys-lfu --appendonly no --stop-writes-on-bgsave-error no --lfu-log-factor 10 --lfu-decay-time 1
    volumes:
      - ./redis-vol:/data
    restart: always

  backend:
    profiles: [ "backend","core-only", "all" ]
    stdin_open: true  # -i
    tty: true         # -t
    build:
      context: .
      dockerfile: Dockerfile
      network: host
      args:
        - TZ=$TZ
    image: python.$STACK
    privileged: true
    volumes:
      - ./backend:/app
      - ./config.json:/app/config.json
      - ./web-client:/apps/web-client
      - ./sys/fs/cgroup:/sys/fs/cgroup:ro
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - PORT=8225
    links:
      - database
      - redis_cache
    ports:
      - "8225:8225"
    restart: always

  client:
    profiles: [ "core-only", "all" ]
    stdin_open: true  # -i
    tty: true         # -t
    build:
      context: .
      dockerfile: Dockerfile-webclient
      network: host
      args:
        - TZ=$TZ
    image: python.admin-$STACK
    volumes:
      - ./web-client:/app
      - ./uploads:/uploads
      - ./web-client/demo/demo/config.json:/app/config.json:ro
    environment:
      - PORT=8526
    links:
      - backend
    ports:
      - "8526:8526"
    restart: always

  automation:
    profiles: [ "all" ]
    stdin_open: true  # -i
    tty: true
    build:
      context: automations
      dockerfile: Dockerfile
      network: host
      args:
        - TZ=$TZ
    image: automations.$STACK
    volumes:
      - ./automations:/automations
    privileged: true
    restart: always