version: '3.8'

services:

  databse:
    stdin_open: true  # -i
    tty: true
    build:
      context: .
      dockerfile: Dockerfile-mongo
      network: host
      args:
        TZ: $TZ
    container_name: mongo-$STACK
    environment:
      MONGO_INITDB_ROOT_USERNAME: $MONGO_INITDB_ROOT_USERNAME
      MONGO_INITDB_ROOT_PASSWORD: $MONGO_INITDB_ROOT_PASSWORD
      MONGO_INITDB_DATABASE: $MONGO_INITDB_DATABASE
    volumes:
      - ./mdbdata:/data/db
      - ./scripts/init_db.js:/docker-entrypoint-initdb.d/init_db.js:ro
    ports:
      - "${MONGO_PORT}:27017"
    restart: always

  backend:
    stdin_open: true  # -i
    tty: true         # -t
    build:
      context: .
      dockerfile: Dockerfile
      network: host
      args:
        TZ: $TZ
    image: python3.8.$STACK
    volumes:
      - ./backend:/app
      - .env:/app/.env
    environment:
      - WEB_CONCURRENCY=$WEB_CONCURRENCY
      - PORT=8225
    ports:
      - "${SERVER_PORT}:8225"
    links:
      - databse
    restart: 'always'


  client:
    stdin_open: true  # -i
    tty: true         # -t
    build:
      context: .
      dockerfile: Dockerfile-webclient
      network: host
      args:
        TZ: $TZ
    image: python3.8.client-$STACK
    volumes:
      - ./web-client:/app
      - ./uploads:/uploads
      - .env-client:/app/.env
    environment:
      - WEB_CONCURRENCY=$WEB_CONCURRENCY
      - PORT=8526
    ports:
      - "${CLIENT_PORT}:8526"
    links:
      - backend
    restart: 'always'